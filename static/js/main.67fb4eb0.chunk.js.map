{"version":3,"sources":["logo.svg","Header.js","images/bogtools.svg","images/bscscan.svg","images/pancakeswap.svg","queries/getCoins.js","components/UpvoteButton.js","components/CoinList.js","pages/LaunchPage.js","mutations/addCoin.js","forms/CoinForm.js","pages/AddCoin.js","App.js","reportWebVitals.js","initializers/analytics.js","initializers/hotjar.js","index.js"],"names":["Header","Navbar","bg","expand","variant","Container","Brand","as","Link","to","src","logo","height","alt","Toggle","Collapse","className","Nav","href","target","rel","size","GET_COINS","gql","UpvoteButton","coin","Button","disabled","ContractLinks","contract","CustomDropdownItem","name","social","url","address","CustomIcon","width","SocialIcon","bscscan","bogtools","pancakeswap","SocialLink","Dropdown","Item","CustomToggle","forwardRef","ref","children","onClick","e","preventDefault","CoinItem","symbol","date","launch","website","Menu","Object","keys","map","key","moment","isAfter","CoinList","useQuery","pollInterval","loading","error","data","Card","Body","Spinner","Table","borderless","responsive","coins","id","LaunchPage","string","hidden","Row","Col","md","lg","span","offset","ADD_COIN","FormError","errors","CoinForm","useForm","register","handleSubmit","formState","touchedFields","isSubmitted","isSubmitting","useState","token","setToken","completed","setCompleted","useMutation","addCoin","uploadAsset","a","fetch","process","method","headers","Authorization","body","encodeURIComponent","response","json","onSubmit","format","connect","variables","noValidate","xs","Form","Group","controlId","Label","Control","placeholder","required","isInvalid","isValid","data-testid","pattern","value","message","description","type","Text","muted","chain","default","telegram","twitter","discord","medium","sitekey","onChange","block","animation","role","AddCoin","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GA4React","initialize","ga4","pageview","gtag","err","console","hotjar","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.67fb4eb0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e9847812.svg\";","import logo from \"./logo.svg\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Twitter, Telegram } from '@styled-icons/boxicons-logos'\n\nexport function Header() {\n  return (\n    <Navbar bg=\"transparent\" expand=\"lg\" variant=\"dark\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          <img src={logo} height=\"40\" alt=\"coinrocket\" />\n        </Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Nav.Link href=\"https://t.me/coinrocketapp\" target=\"_blank\" rel=\"noopener noreferrer\"><Telegram size=\"24\" className=\"text-white\" /></Nav.Link>\n          <Nav.Link href=\"https://twitter.com/coinrocketapp\" target=\"_blank\" rel=\"noopener noreferrer\" ><Twitter size=\"24\" className=\"text-white\" /></Nav.Link>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/bogtools.62d1cb89.svg\";","export default __webpack_public_path__ + \"static/media/bscscan.7d356d7a.svg\";","export default __webpack_public_path__ + \"static/media/pancakeswap.430c0408.svg\";","import { gql } from \"@apollo/client\";\n\nexport const GET_COINS = gql`\n  query Coins {\n    coins {\n      id\n      name\n      symbol\n      website\n      description\n      launch\n      logo {\n        url\n      }\n      contract\n      social\n    }\n  }\n`;\n","import { UpArrowAlt } from \"@styled-icons/boxicons-regular\";\nimport { Button } from \"react-bootstrap\";\n\nexport function UpvoteButton({ coin }) {\n  return (\n    <Button variant=\"outline-success\" disabled>\n      <UpArrowAlt size={16} />\n      <span className=\"ml-1 text-uppercase d-none d-lg-block\">1234</span>\n    </Button>\n  );\n}\n","import { forwardRef } from \"react\";\nimport {\n  Telegram,\n  Twitter,\n  Discord,\n  Medium,\n} from \"@styled-icons/boxicons-logos\";\nimport { Globe, DotsHorizontalRounded } from \"@styled-icons/boxicons-regular\";\nimport { Card, Table, Spinner, Dropdown } from \"react-bootstrap\";\n// import coins from \"../coins-example\";\nimport TimeAgo from \"react-timeago\";\nimport \"./CoinList.css\";\nimport bogtools from \"../images/bogtools.svg\";\nimport bscscan from \"../images/bscscan.svg\";\nimport pancakeswap from \"../images/pancakeswap.svg\";\nimport moment from \"moment\";\nimport { GET_COINS } from \"../queries/getCoins\";\nimport { useQuery } from \"@apollo/client\";\nimport { UpvoteButton } from \"./UpvoteButton\";\n\nfunction ContractLinks({ contract }) {\n  return (\n    <>\n      <CustomDropdownItem name=\"pancakeswap\" social={{ url: `https://exchange.pancakeswap.finance/#/swap?outputCurrency=${contract.address}` }} />\n      {/* <a\n        href={`https://exchange.pancakeswap.finance/#/swap?outputCurrency=${contract.address}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"ml-2\"\n      >\n        <img\n          src={pancakeswap}\n          width={20}\n          height={20}\n          alt=\"charts\"\n          className=\"text-muted\"\n        />\n      </a>\n      <a\n        href={`https://bscscan.com/token/${contract.address}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"ml-2\"\n      >\n        <img\n          src={bscscan}\n          width={20}\n          height={20}\n          alt=\"charts\"\n          className=\"text-muted\"\n        />\n      </a>\n      <a\n        href={`https://charts.bogged.finance/?token=${contract.address}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"ml-2\"\n      >\n        <img\n          src={bogtools}\n          width={20}\n          height={20}\n          alt=\"charts\"\n          className=\"text-muted\"\n        />\n      </a> */}\n    </>\n  );\n}\n\nfunction CustomIcon({ src, alt }) {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      width={20}\n      height={20}\n      className=\"text-muted\"\n    />\n  )\n}\n\nfunction SocialIcon({ name }) {\n  switch (name) {\n    case \"telegram\":\n      return <Telegram size={20} className=\"text-muted\" />;\n    case \"twitter\":\n      return <Twitter size={20} className=\"text-muted\" />;\n    case \"discord\":\n      return <Discord size={20} className=\"text-muted\" />;\n    case \"medium\":\n      return <Medium size={20} className=\"text-muted\" />;\n    case \"bscscan\":\n      return <CustomIcon src={bscscan} alt=\"BSCScan\" />;\n    case \"bogtools\":\n      return <CustomIcon src={bogtools} alt=\"BogTools\" />;\n    case \"pancakeswap\":\n      return <CustomIcon src={pancakeswap} alt=\"PancakeSwap\" />;\n    default:\n      return <Globe size={20} className=\"text-muted\" />;\n  }\n}\n\nfunction SocialLink({ name, social }) {\n  if (social.url === \"\") return <></>;\n  return (\n    <a href={social.url} target=\"_blank\" rel=\"noopener noreferrer\">\n      <SocialIcon name={name} />\n    </a>\n  );\n}\n\nfunction CustomDropdownItem({ name, social }) {\n  if (social.url === \"\") return <></>;\n  return (\n    <Dropdown.Item\n      href={social.url}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"text-capitalize d-flex align-items-center\"\n    >\n      <SocialIcon name={name} />\n      <span className=\"ml-1\">{name}</span>\n    </Dropdown.Item>\n  );\n}\n\nconst CustomToggle = forwardRef(({ children, onClick }, ref) => (\n  <button\n    href=\"\"\n    ref={ref}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </button>\n));\n\nfunction CoinItem({ coin }) {\n  return (\n    <tr>\n      <td className=\"align-middle\">\n        <div className=\"d-flex align-items-center\">\n          <img\n            src={coin.logo.url}\n            height=\"40\"\n            width=\"40\"\n            alt=\"logo\"\n            className=\"rounded-circle mr-3 d-none d-sm-block\"\n          />\n          <div>\n            <h6 className=\"mb-0\">{coin.name}</h6>\n            <p className=\"m-0\">{coin.symbol}</p>\n          </div>\n        </div>\n      </td>\n      <td className=\"align-middle text-right d-none d-sm-table-cell\">\n        <TimeAgo date={coin.launch} />\n      </td>\n      <td className=\"align-middle text-right d-none d-sm-table-cell\">\n        <div className=\"d-flex align-items-center text-right justify-content-end\">\n          <SocialLink name=\"website\" social={{ url: coin.website }} />\n          <Dropdown className=\"ml-1\">\n            <Dropdown.Toggle as={CustomToggle}>\n              <DotsHorizontalRounded size={20} className=\"text-muted\" />\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {Object.keys(coin.social).map((key) => (\n                <CustomDropdownItem\n                  key={key}\n                  name={key}\n                  social={coin.social[key]}\n                />\n              ))}\n              {moment().isAfter(moment(coin.launch)) ? (\n                <ContractLinks contract={coin.contract} />\n              ) : (\n                <></>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </td>\n      {/* <td className=\"align-middle text-right d-none d-sm-table-cell\">\n        {moment().isAfter(moment(coin.launch)) ? (\n          <ContractLinks contract={coin.contract} />\n        ) : (\n          <></>\n        )}\n      </td> */}\n      <td className=\"align-middle text-right\">\n        <UpvoteButton coin={coin} />\n      </td>\n    </tr>\n  );\n}\n\nexport function CoinList() {\n  const { loading, error, data } = useQuery(GET_COINS, { pollInterval: 500 });\n\n  return (\n    <Card className=\"shadow border-0\">\n      <Card.Body>\n        {loading ? (\n          <Spinner />\n        ) : error ? (\n          <div className=\"text-center\">\n            <p>Oops.. something unexpected happened!</p>\n          </div>\n        ) : (\n          <Table borderless responsive>\n            <thead>\n              <tr>\n                <th>Coin</th>\n                <th className=\"text-right d-none d-sm-table-cell\">Launch</th>\n                {/* <th className=\"text-right d-none d-sm-table-cell\">Social</th> */}\n                <th className=\"text-right d-none d-sm-table-cell\">Links</th>\n                <th className=\"text-right\">Vote</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data.coins.map((coin) => (\n                <CoinItem coin={coin} key={coin.id} />\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Card.Body>\n    </Card>\n  );\n}\n","import { Container, Row, Col, Button } from \"react-bootstrap\";\nimport \"./LaunchPage.css\";\nimport { Typewriter } from \"react-typewriting-effect\";\nimport \"react-typewriting-effect/dist/index.css\";\nimport { Link } from \"react-router-dom\";\nimport { CoinList } from \"../components/CoinList\";\n\nexport function LaunchPage() {\n  return (\n    <Container className=\"mt-5 pt-5\">\n      <h1 className=\"display-4 text-capitalize text-white mt-5 pt-5 mb-5\">\n        <Typewriter string=\"Launch your coin into orbit.\"></Typewriter>\n      </h1>\n      <h2 hidden>\n        Find the next big crypto coin. Top voted, highest ranked, all time best\n        crypto currency coin lists on the Binance Smart Chain Network.\n      </h2>\n      <Row>\n        <Col md={6}>\n          <p className=\"lead text-white\">\n            Coinrocket.app is a promotion platform for crypto currency projects.\n            We are building a community of crypto enthusiasts in search for the\n            next 1000x coins.\n          </p>\n          <Button\n            as={Link}\n            to=\"/apply\"\n            className=\"mt-5 text-uppercase\"\n            size=\"lg\"\n            variant=\"outline-light\"\n          >\n            Get listed today\n          </Button>\n        </Col>\n      </Row>\n      <Row className=\"mt-5 pt-5\">\n        <Col lg={{ span: 10, offset: 1 }}>\n          <CoinList />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const ADD_COIN = gql`\n  mutation AddCoin($data: CoinCreateInput!) {\n    createCoin(data: $data) {\n      id\n      name\n      symbol\n      description\n      launch\n      contract\n      social\n      logo {\n        url\n      }\n    }\n  }\n`;\n","import { useState } from \"react\";\nimport { Card, Row, Col, Form, Button, Spinner } from \"react-bootstrap\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { useForm } from \"react-hook-form\";\nimport { ErrorMessage } from \"@hookform/error-message\";\nimport moment from \"moment\";\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_COIN } from \"../mutations/addCoin\";\nimport { Twitter, Telegram } from \"@styled-icons/boxicons-logos\";\n\nfunction FormError({ errors, name }) {\n  return (\n    <div className=\"invalid-feedback\">\n      <ErrorMessage errors={errors} name={name} />\n    </div>\n  );\n}\n\nexport function CoinForm() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, touchedFields, isSubmitted, isSubmitting },\n  } = useForm({\n    // defaultValues: {\n    //   name: \"Bitcoin\",\n    //   symbol: \"BTC\",\n    //   website: \"https://bitcoin.com\",\n    //   logo: {\n    //     url: \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/46/Bitcoin.svg/480px-Bitcoin.svg.png\",\n    //   },\n    //   launch: moment().format(\"YYYY-MM-DDTHH:mm\"),\n    //   description: \"Bitcoin is a decentralized digital currency.\",\n    //   contract: {\n    //     chain: \"bsc\",\n    //     address: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n    //   },\n    //   social: {\n    //     telegram: { url: \"https://t.me/bitcoin\" },\n    //     twitter: { url: \"https://twitter.com/bitcoin\" },\n    //     discord: { url: \"https://discord.com/bitcoin\" },\n    //     medium: { url: \"https://medium.com/@bitcoin\" },\n    //   },\n    // },\n  });\n  const [token, setToken] = useState(null);\n  // const [token, setToken] = useState(true);\n  const [completed, setCompleted] = useState(false);\n\n  const [addCoin] = useMutation(ADD_COIN);\n\n  const uploadAsset = async (url) => {\n    const response = await fetch(\n      `${process.env.REACT_APP_GRAPHCMS_ENDPOINT}/upload`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${process.env.REACT_APP_GRAPHCMS_AUTH_TOKEN}`,\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: `url=${encodeURIComponent(url)}`,\n      }\n    );\n    return await response.json();\n  };\n\n  const onSubmit = async (data) => {\n    const logo = await uploadAsset(data.logo.url);\n    delete data.logo.url;\n    data = {\n      ...data,\n      launch: moment(data.launch).format(),\n      logo: { connect: { id: logo.id } },\n    };\n    // console.log(data)\n    await addCoin({ variables: { data } });\n    setCompleted(true);\n  };\n\n  return (\n    <Card className=\"shadow border-0\">\n      <Card.Header hidden>Apply to get your coin listed</Card.Header>\n      <Card.Body className=\"p-4\">\n        <form\n          noValidate\n          onSubmit={handleSubmit(onSubmit)}\n          className={completed ? \"d-none\" : \"\"}\n        >\n          <Row className=\"mb-2\">\n            <Col>\n              <h6>General</h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  placeholder=\"Bitcoin\"\n                  {...register(\"name\", { required: \"Name is required\" })}\n                  isInvalid={errors.name}\n                  isValid={isSubmitted && touchedFields.name && !errors.name}\n                  data-testid=\"name\"\n                />\n                <FormError errors={errors} name=\"name\" />\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"symbol\">\n                <Form.Label>Symbol</Form.Label>\n                <Form.Control\n                  placeholder=\"BTC\"\n                  {...register(\"symbol\", { required: \"Symbol is required\" })}\n                  isInvalid={errors.symbol}\n                  isValid={\n                    isSubmitted && touchedFields.symbol && !errors.symbol\n                  }\n                  data-testid=\"symbol\"\n                />\n                <FormError errors={errors} name=\"symbol\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"website\">\n                <Form.Label>Website</Form.Label>\n                <Form.Control\n                  {...register(\"website\", {\n                    pattern: {\n                      value:\n                        /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/,\n                      message: \"Invalid website url\",\n                    },\n                  })}\n                  placeholder=\"https://bitcoin.com\"\n                  isInvalid={errors.website}\n                  isValid={\n                    isSubmitted && touchedFields.website && !errors.website\n                  }\n                  data-testid=\"website\"\n                />\n                <FormError errors={errors} name=\"website\" />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"logo.url\">\n                <Form.Label>Logo</Form.Label>\n                <Form.Control\n                  placeholder=\"https://via.placeholder.com/512.png\"\n                  {...register(\"logo.url\", {\n                    required: \"Logo URL is required\",\n                  })}\n                  isInvalid={errors.logo?.url}\n                  isValid={\n                    isSubmitted && touchedFields.logo?.url && !errors.logo?.url\n                  }\n                  data-testid=\"logo.url\"\n                />\n                <FormError errors={errors} name=\"logo.url\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"description\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  placeholder=\"Ex. Bitcoin is a decentralized digital currency.\"\n                  {...register(\"description\", {\n                    required: \"Description is required\",\n                  })}\n                  isInvalid={errors.description}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.description &&\n                    !errors.description\n                  }\n                  data-testid=\"description\"\n                />\n                <FormError errors={errors} name=\"description\" />\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"launch\">\n                <Form.Label>Launch Date & Time</Form.Label>\n                <Form.Control\n                  {...register(\"launch\", { required: \"Launch is required\" })}\n                  type=\"datetime-local\"\n                  isInvalid={errors.launch}\n                  isValid={\n                    isSubmitted && touchedFields.launch && !errors.launch\n                  }\n                  data-testid=\"launch\"\n                />\n                <Form.Text muted>\n                  Contract address is hidden prior to launch.\n                </Form.Text>\n                <FormError errors={errors} name=\"launch\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"mt-4 mb-2\">\n            <Col>\n              <h6>Contract</h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={3}>\n              <Form.Group controlId=\"chain\">\n                <Form.Label>Chain</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  {...register(\"contract.chain\", {\n                    required: \"Chain is required\",\n                  })}\n                  isInvalid={errors.contract?.chain}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.contract?.chain &&\n                    !errors.contract?.chain\n                  }\n                  data-testid=\"contract.chain\"\n                >\n                  <option value=\"bsc\" default>\n                    BSC\n                  </option>\n                </Form.Control>\n                <FormError errors={errors} name=\"contract.chain\" />\n              </Form.Group>\n            </Col>\n            <Col>\n              <Form.Group controlId=\"address\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  {...register(\"contract.address\", {\n                    required: \"Address is required\",\n                    pattern: {\n                      value: /^0x[a-fA-F0-9]{40}$/,\n                      message: \"Invalid format\",\n                    },\n                  })}\n                  placeholder=\"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n                  isInvalid={errors.contract?.address}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.contract?.address &&\n                    !errors.contract?.address\n                  }\n                  data-testid=\"contract.address\"\n                />\n                <FormError errors={errors} name=\"contract.address\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"mt-4 mb-2\">\n            <Col>\n              <h6>Socials</h6>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"social.telegram.url\">\n                <Form.Label>Telegram</Form.Label>\n                <Form.Control\n                  {...register(\"social.telegram.url\", {\n                    required: \"Telegram required\",\n                    pattern: {\n                      value: /http(?:s)?:\\/\\/?t\\.me\\/([a-zA-Z0-9_]+)/,\n                      message: \"Invalid telegram url\",\n                    },\n                  })}\n                  placeholder=\"https://t.me/bitcoin\"\n                  isInvalid={errors.social?.telegram?.url}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.social?.telegram?.url &&\n                    !errors.social?.telegram?.url\n                  }\n                  data-testid=\"social.telegram.url\"\n                />\n                <FormError errors={errors} name=\"social.telegram.url\" />\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"social.twitter.url\">\n                <Form.Label>Twitter</Form.Label>\n                <Form.Control\n                  {...register(\"social.twitter.url\", {\n                    pattern: {\n                      value:\n                        /http(?:s)?:\\/\\/(?:www\\.)?twitter\\.com\\/([a-zA-Z0-9_]+)/,\n                      message: \"Invalid twitter url\",\n                    },\n                  })}\n                  placeholder=\"https://twitter.com/bitcoin\"\n                  isInvalid={errors.social?.twitter?.url}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.social?.twitter?.url &&\n                    !errors.social?.twitter?.url\n                  }\n                  data-testid=\"social.twitter.url\"\n                />\n                <FormError errors={errors} name=\"social.twitter.url\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"social.discord.url\">\n                <Form.Label>Discord</Form.Label>\n                <Form.Control\n                  {...register(\"social.discord.url\", {\n                    pattern: {\n                      value:\n                        /http(?:s)?:\\/\\/(?:www\\.)?discord\\.com\\/([a-zA-Z0-9_]+)/,\n                      message: \"Invalid discord url\",\n                    },\n                  })}\n                  placeholder=\"https://discord.com/bitcoin\"\n                  isInvalid={errors.social?.discord?.url}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.social?.discord?.url &&\n                    !errors.social?.discord?.url\n                  }\n                  data-testid=\"social.discord.url\"\n                />\n                <FormError errors={errors} name=\"social.discord.url\" />\n              </Form.Group>\n            </Col>\n            <Col xs={12} md={6}>\n              <Form.Group controlId=\"social.medium.url\">\n                <Form.Label>Medium</Form.Label>\n                <Form.Control\n                  {...register(\"social.medium.url\", {\n                    pattern: {\n                      value:\n                        /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/,\n                      message: \"Invalid medium url\",\n                    },\n                  })}\n                  placeholder=\"https://medium.com/@bitcoin\"\n                  isInvalid={errors.social?.medium?.url}\n                  isValid={\n                    isSubmitted &&\n                    touchedFields.social?.medium?.url &&\n                    !errors.social?.medium?.url\n                  }\n                  data-testid=\"social.medium.url\"\n                />\n                <FormError errors={errors} name=\"social.medium.url\" />\n              </Form.Group>\n            </Col>\n          </Row>\n          <Row className=\"mt-4 mb-2\">\n            <Col className=\"d-flex justify-content-center\">\n              <ReCAPTCHA\n                sitekey={process.env.REACT_APP_RECAPTCHA_SITE_KEY}\n                onChange={(token) => setToken(token)}\n                data-testid=\"recaptcha\"\n              />\n            </Col>\n          </Row>\n          <Row className=\"mt-4 mb-2\">\n            <Col>\n              <Button\n                type=\"submit\"\n                size=\"lg\"\n                disabled={token == null || isSubmitting || completed}\n                data-testid=\"submit-btn\"\n                block\n              >\n                {!isSubmitting ? (\n                  <span>Submit Project</span>\n                ) : (\n                  <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\">Loading...</span>\n                  </Spinner>\n                )}\n              </Button>\n              {/* <code>{ `isSubmitting: ${isSubmitting}` }</code><br/>\n              <code>{ `completed: ${completed}` }</code><br/>\n              <code>{ `token: ${token}` }</code><br/> */}\n            </Col>\n          </Row>\n        </form>\n        <div hidden={!completed} className=\"text-center mt-4 mb-4\">\n           {/* ? \"d-none\" : \"text-center\"}> */}\n          <h3>Thank you</h3>\n          <p className=\"lead\">\n            Follow us on telegram to stay tuned on the launch!\n          </p>\n          <Row>\n            <Col className=\"d-flex justify-content-center align-items-center pt-2\">\n              <a\n                href=\"https://t.me/coinrocketapp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Telegram size=\"24\" />\n                &nbsp;<span>@coinrocketapp</span>\n              </a>\n            </Col>\n          </Row>\n          <Row>\n            <Col className=\"d-flex justify-content-center align-items-center pt-2\">\n              <a\n                href=\"https://twitter.com/coinrocketapp\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Twitter size=\"24\" />\n                &nbsp;<span>@coinrocketapp</span>\n              </a>\n            </Col>\n          </Row>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","import { CoinForm } from \"../forms/CoinForm\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nexport function AddCoin() {\n  return (\n    <Container className=\"mt-5\">\n      <Row>\n        <Col className=\"text-center mb-3 text-white\">\n          <h1 className=\" text-uppercase\">List your coin</h1>\n          <h2 hidden>Promote your coin by getting listed on coinrocket.app.</h2>\n          <p className=\"mt-4\">\n            First 3 projects to signup to register will receive 🔥 2 weeks of <strong>FREE</strong> promotion 🔥.\n            </p>\n        </Col>\n      </Row>\n      <Row>\n        <Col lg={{ span: 8, offset: 2 }}>\n          <CoinForm />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Header } from \"./Header\";\nimport { LaunchPage } from './pages/LaunchPage'\nimport { AddCoin } from './pages/AddCoin'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  // console.log('REACT_APP_GRAPHCMS_ENDPOINT', process.env.REACT_APP_GRAPHCMS_ENDPOINT)\n  // console.log('REACT_APP_GRAPHCMS_AUTH_TOKEN', process.env.REACT_APP_GRAPHCMS_AUTH_TOKEN)\n  // console.log('REACT_APP_RECAPTCHA_SITE_KEY', process.env.REACT_APP_RECAPTCHA_SITE_KEY)\n\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/apply\"><AddCoin /></Route>\n        <Route path=\"/\"><LaunchPage /></Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Google Analytics 4\n\nimport GA4React from \"ga-4-react\";\n\nconst ga4react = new GA4React(process.env.REACT_APP_MEASUREMENT_ID);\nga4react.initialize().then(\n  (ga4) => {\n    ga4.pageview(\"path\");\n    ga4.gtag(\"event\", \"pageview\", \"path\"); // or your custom gtag event\n  },\n  (err) => {\n    console.error(err);\n  }\n);\n","import { hotjar } from 'react-hotjar';\n \nhotjar.initialize(process.env.REACT_APP_HOTJAR_SITE_ID, 6);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './initializers'\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\";\nimport \"@fontsource/pt-mono\";\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_GRAPHCMS_ENDPOINT,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}